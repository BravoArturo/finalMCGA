{"version":3,"sources":["reportWebVitals.ts","components/screens/Login/loginService.tsx","components/screens/Login/Loginform.tsx","components/screens/Navbar/Navbar.tsx","components/screens/Task/TaskService.tsx","components/screens/Task/TaskForm.tsx","components/screens/Task/TaskItem.tsx","components/screens/Task/TaskList.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getUsers","a","axios","get","Loginform","history","useHistory","useState","userName","password","login","setlogin","hadleInputChange","e","target","name","value","handleSubmit","preventDefault","LoginService","res","searchUser","data","filter","user","loginAlert","swal","title","className","length","push","pathname","state","statusLogin","onSubmit","type","placeholder","autoFocus","onChange","Navbar","location","useLocation","onClick","getTasks","createTask","task","post","getTask","id","updatedTask","put","deleteTask","delete","TaskForm","params","useParams","console","log","initalState","description","deadline","settask","TaskService","toast","success","useEffect","TaskItem","loadTask","handleDdelete","error","Date","parse","now","_id","window","confirm","TaskList","tasks","settasks","formatedDate","map","createdAt","updatedAt","ReactDOM","render","StrictMode","exact","path","component","Login","document","getElementById"],"mappings":"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","file":"static/js/main.f7b8af8d.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import axios from 'axios';\r\nimport Login from './Login';\r\n\r\nexport const getUsers = async () => {\r\n    return await axios.get<Login[]>(`https://tasksmcga.herokuapp.com/Users`);\r\n}\r\n\r\nexport const createUser = async (user: Login) => {\r\n    return await axios.post(`https://tasksmcga.herokuapp.com/Users`, user);\r\n}\r\n\r\nexport const getUser = async (id: string) => {\r\n    return await axios.get<Login>(`https://tasksmcga.herokuapp.com/Users/${id}`);\r\n}\r\n\r\nexport const updatedUser = async (id: string, user: Login) => {\r\n    return await axios.put<Login>(`https://tasksmcga.herokuapp.com/Users/${id}`, user);\r\n}\r\n\r\nexport const deleteUser = async (id: string) => {\r\n    return await axios.delete<Login>(`https://tasksmcga.herokuapp.com/Users/${id}`);\r\n}","import userEvent from '@testing-library/user-event';\r\nimport React, { ChangeEvent, FormEvent, useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { BrowserRouter, Link, Route } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Login from './Login';\r\nimport * as LoginService from './loginService'\r\nimport './styles.css'\r\nimport swal from 'sweetalert';\r\n\r\nconst Loginform = () => {\r\n    const history = useHistory();\r\n\r\n    const initalStateLogin = { userName: '', password: '' };\r\n    const [login, setlogin] = useState<Login>(initalStateLogin);\r\n\r\n    const hadleInputChange = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        setlogin({ ...login, [e.target.name]: e.target.value })\r\n    };\r\n\r\n    const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault(); //we cancelled the default behavior\r\n        const res = await LoginService.getUsers();\r\n        const searchUser = res.data.filter(user => user.userName == login.userName);\r\n        const loginAlert=()=>{\r\n            swal({\r\n                title:\"User and password do not match\", \r\n                className: \"red-bg\",\r\n            }); \r\n        }   \r\n        if (searchUser.length > 0) {\r\n            login.password == searchUser[0].password ?\r\n                history.push({\r\n                    pathname: '/home'\r\n                    ,\r\n                    state: { statusLogin: true }\r\n                })\r\n                :\r\n                loginAlert();\r\n        } else {\r\n            loginAlert();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <header> Welcome</header>\r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n                <div className=\"data\">\r\n                    <label>Username</label>\r\n                    <input type=\"text\" name=\"userName\" placeholder=\"Please write your user name\" autoFocus onChange={hadleInputChange} value={login.userName} />\r\n                </div>\r\n                <div className=\"data pass\">\r\n                    <label>Password</label>\r\n                    <input type=\"password\" name=\"password\" placeholder=\"Please write your password\" onChange={hadleInputChange} value={login.password} />\r\n                </div>\r\n                <div className=\"btnConteiner\">\r\n                    <button className=\"btn\" type=\"submit\">log in</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default Loginform;","import react from 'react'\r\nimport { BrowserRouter, Link, Router } from 'react-router-dom';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport './Navbar.css'\r\n\r\nconst Navbar = () => {\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const stateLogin = location.state\r\n    return(\r\n    <div className=\"containerHome\">\r\n        {\r\n            location.state?\r\n            <div>\r\n                <div className=\"tittleProject\">\r\n                </div>\r\n                <div className=\"navMenu\">\r\n                    <nav className=\"navbar\">\r\n                        <a className=\"menuMyTask\" onClick={() => history.push({\r\n                    pathname: '/myTask'})}>My Task</a>\r\n                        {/* This should use Link */}\r\n                        <a className=\"menuNewTask\" onClick={() => history.push({\r\n                    pathname: '/newTask'})}>New Task</a>\r\n                        <a className=\"menuLogOut\" onClick={() => history.push({\r\n                    pathname: '/finalMCGA'})}>Log Out</a>\r\n                        <div className=\"dot\"></div>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n            :\r\n            <div>\r\n                <div className=\"tittleProject\">\r\n                </div>\r\n                <div className=\"navMenu\">\r\n                    <nav className=\"navbar\">\r\n                    You must be logged in first \r\n                    <div className=\"dot\"></div>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n}\r\n        \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import axios from 'axios';\r\nimport Task from './Task';\r\n\r\nexport const getTasks = async () => {\r\n    return await axios.get<Task[]>('https://tasksmcga.herokuapp.com/Tasks');\r\n}\r\n\r\nexport const createTask = async (task: Task) => {\r\n    return await axios.post('https://tasksmcga.herokuapp.com/Tasks', task);\r\n}\r\n\r\nexport const getTask = async (id: string) => {\r\n    return await axios.get<Task>(`https://tasksmcga.herokuapp.com/Tasks/${id}`);\r\n}\r\n\r\nexport const updatedTask = async (id: string, task: Task) => {\r\n    return await axios.put<Task>(`https://tasksmcga.herokuapp.com/Tasks/${id}`, task);\r\n}\r\n\r\nexport const deleteTask = async (id: string) => {\r\n    return await axios.delete<Task>(`https://tasksmcga.herokuapp.com/Tasks/${id}`);\r\n}","import React, { ChangeEvent, FormEvent, useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport Task from './Task';\r\nimport * as TaskService from './TaskService';\r\nimport { useParams } from 'react-router';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './Task.css';\r\n\r\nconst TaskForm = () => {\r\n    const history = useHistory();\r\n\r\n    interface Params {\r\n        id: string;\r\n    }\r\n    const params = useParams<Params>();\r\n    console.log(params);\r\n    const initalState = { title: '', description: '', deadline: '' };\r\n    const [task, settask] = useState<Task>(initalState);\r\n\r\n    const hadleInputChange = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        settask({ ...task, [e.target.name]: e.target.value })\r\n    };\r\n\r\n    const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault(); //we cancelled the default behavior\r\n\r\n        if (!params.id) {\r\n            const res = await TaskService.createTask(task);\r\n            console.log(res.data);\r\n            toast.success(\"Task Created\")\r\n            settask(initalState);\r\n        } else {\r\n            await TaskService.updatedTask(params.id, task);\r\n            toast.success('Task updated');\r\n        }\r\n    };\r\n\r\n    const getTask = async (id: string) => {\r\n        const res = await TaskService.getTask(id);\r\n        const { title, description, deadline } = res.data;\r\n        settask({ title, description, deadline });\r\n    }\r\n    useEffect(() => {\r\n        if (params.id) getTask(params.id);\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <div className=\"wrapper\">\r\n                <div className='newTask'>\r\n                    <form className=\"formCUTask\" onSubmit={handleSubmit}>\r\n                        <div className=\"taskStructure\">\r\n                            <div className=\"deadline\">\r\n                                <label className=\"labelCUTask\">Please enter a deadline</label>\r\n                                <input className=\"inputCUTask\" type=\"date\" name=\"deadline\" onChange={hadleInputChange} value={task.deadline}></input>\r\n                            </div>\r\n                            <div className=\"tittle\">\r\n                                <label className=\"labelCUTask\">Write a title for this task</label>\r\n                                <input className=\"inputCUTask\" type=\"text\" name=\"title\" autoFocus onChange={hadleInputChange} value={task.title}></input>\r\n                            </div>\r\n                            <div className=\"description\">\r\n                                <label className=\"labelCUTask\">Please enter a description</label>\r\n                                <textarea className=\"textareaCUTask\" name=\"description\" onChange={hadleInputChange} value={task.description}></textarea>\r\n                            </div>\r\n                            <div className=\"btnTask\">\r\n                                {\r\n                                    params.id ?\r\n                                        <button className=\"btnCUTask\">Updated task</button>\r\n                                        :\r\n                                        <button className=\"btnCUTask\">Create task</button>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className=\"footer\">\r\n                    <a className=\"icon\" onClick={() => history.push({\r\n                    pathname: '/home'\r\n                    ,\r\n                    state: { statusLogin: true }\r\n                })}>Home</a>\r\n                    <a className=\"icon\" onClick={() => history.push({\r\n                    pathname: '/myTask'\r\n                })}>My Task</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskForm;\r\n","import react from 'react';\r\nimport Task from './Task';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as TaskService from './TaskService';\r\nimport { toast } from 'react-toastify';\r\nimport './StructureTask.css';\r\n\r\ninterface Props {\r\n    task: Task,\r\n    loadTask: () => void;\r\n}\r\nconst TaskItem = ({ task, loadTask }: Props) => {\r\n    const days = 24 * 60 * 60 * 1000;\r\n    const history = useHistory();\r\n\r\n    const handleDdelete = async (id: string) => {\r\n        await TaskService.deleteTask(id);\r\n        await toast.error(\"One item was deleted\");\r\n        loadTask();\r\n    };\r\n\r\n    const deleteTaskConfirmation = (id: string) => {\r\n        window.confirm(\"Delete one task?\") ?\r\n            handleDdelete(id)\r\n            :\r\n            console.log(\"No delete\");\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"wrapper2\">\r\n                <div className=\"containerTask\">\r\n                    <form className=\"formTaskList\">\r\n                        <div className=\"date\">\r\n                            <label className=\"deadlineTask\">{task.deadline}</label>\r\n                            {\r\n                                ((Date.parse(task.deadline) - Date.now()) / days) <= 5 ?\r\n                                    <div className=\"colorRed\">You have 5 days or less to do this task</div>\r\n                                    :\r\n                                    <div className=\"colorGreen\">You have more than 5 days to do this task</div>\r\n                            }\r\n                        </div>\r\n                        <div className=\"tittleTask\">\r\n                            <label className=\"taskTittle\">{task.title}</label>\r\n                        </div>\r\n                        <div className=\"descriptionTask\">\r\n                            <label>{task.description}</label>\r\n                        </div>\r\n                        <div>\r\n                            <button className=\"btnUpdateTask\" onClick={() => history.push(`/updated/${task._id}`)}>Edit</button>\r\n                            <button className=\"btnDeleteTask\" onClick={() => task._id &&  deleteTaskConfirmation(task._id)}>Delete</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default TaskItem\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Task from \"./Task\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as TaskService from './TaskService'\r\nimport TaskItem from './TaskItem'\r\n\r\nconst TaskList = () => {\r\n    const history = useHistory();\r\n    const [tasks, settasks] = useState<Task[]>([]);\r\n\r\n    const loadTask = async () => {\r\n        const res = await TaskService.getTasks();\r\n        const formatedDate = res.data.map(task => {\r\n            return {\r\n                ...task,\r\n                createdAt: task.createdAt ? new Date(task.createdAt) : new Date(),\r\n                updatedAt: task.updatedAt ? new Date(task.updatedAt) : new Date(),\r\n            }\r\n        })\r\n        settasks(formatedDate);\r\n        console.log(res.data);\r\n    }\r\n    useEffect(() => {\r\n        loadTask()\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <div className=\"header\">\r\n                <div>\r\n                    <h1 className=\"tittleMyTasks\">My Tasks</h1>\r\n                </div>\r\n                <div>\r\n                    <a className=\"icon\" onClick={() => history.push({\r\n                    pathname: '/home'\r\n                    ,\r\n                    state: { statusLogin: true }\r\n                })}>Home</a>\r\n                    <a className=\"icon\" onClick={() => history.push({\r\n                    pathname: '/newTask'})}>Create Task</a>\r\n                </div>\r\n            </div>\r\n            <div className=\"loadTask\">{\r\n                tasks.map((task) => {\r\n                    return <TaskItem task={task} key={task._id} loadTask={loadTask}></TaskItem>\r\n                })\r\n            }</div>\r\n        </div>\r\n    );\r\n} \r\nexport default TaskList;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n//import Navbar from './components/screens/Navbar/Navbar'\r\nimport Login from './components/screens/Login/Loginform';\r\nimport Navbar from './components/screens/Navbar/Navbar';\r\nimport TaskForm from './components/screens/Task/TaskForm';\r\nimport TaskList from './components/screens/Task/TaskList';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {/* <Navbar></Navbar> */}\r\n    <BrowserRouter>\r\n      <div>\r\n        <Switch>\r\n          <Route exact path=\"/finalMCGA\" component={Login} />\r\n          <Route path=\"/home\" component={Navbar} />\r\n          <Route path=\"/newTask\" component={TaskForm} />\r\n          <Route path=\"/myTask\" component={TaskList} />\r\n          <Route path=\"/updated/:id\" component={TaskForm}/>\r\n        </Switch>\r\n        <ToastContainer />\r\n      </div>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}