[{"C:\\Users\\Lautaro Garello\\Desktop\\finalMCGA-tasks\\src\\index.tsx":"1","C:\\Users\\Lautaro Garello\\Desktop\\finalMCGA-tasks\\src\\reportWebVitals.ts":"2","C:\\Users\\Lautaro Garello\\Desktop\\finalMCGA-tasks\\src\\components\\screens\\Task\\TaskList.tsx":"3","C:\\Users\\Lautaro Garello\\Desktop\\finalMCGA-tasks\\src\\components\\screens\\Navbar\\Navbar.tsx":"4","C:\\Users\\Lautaro Garello\\Desktop\\finalMCGA-tasks\\src\\components\\screens\\Task\\TaskService.tsx":"5","C:\\Users\\Lautaro Garello\\Desktop\\finalMCGA-tasks\\src\\components\\screens\\Task\\TaskItem.tsx":"6","C:\\Users\\Lautaro Garello\\Desktop\\finalMCGA-tasks\\src\\components\\screens\\Task\\TaskForm.tsx":"7","C:\\Users\\Lautaro Garello\\Desktop\\finalMCGA-tasks\\src\\components\\screens\\Login\\Loginform.tsx":"8","C:\\Users\\Lautaro Garello\\Desktop\\finalMCGA-tasks\\src\\components\\screens\\Login\\loginService.tsx":"9"},{"size":1323,"mtime":1628197690002,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1627744708000,"results":"12","hashOfConfig":"11"},{"size":1416,"mtime":1628201601907,"results":"13","hashOfConfig":"11"},{"size":1039,"mtime":1628201004528,"results":"14","hashOfConfig":"11"},{"size":674,"mtime":1627744708000,"results":"15","hashOfConfig":"11"},{"size":2309,"mtime":1628201459015,"results":"16","hashOfConfig":"11"},{"size":3470,"mtime":1628103637627,"results":"17","hashOfConfig":"11"},{"size":2349,"mtime":1628200334385,"results":"18","hashOfConfig":"11"},{"size":700,"mtime":1628197435933,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"1doyd1e",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"C:\\Users\\Lautaro Garello\\Desktop\\finalMCGA-tasks\\src\\index.tsx",["41"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport TaskList from './components/screens/Task/TaskList';\nimport TaskForm from './components/screens/Task/TaskForm';\nimport Navbar from './components/screens/Navbar/Navbar'\nimport Login from './components/screens/Login/Loginform';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport TaskItem from './components/screens/Task/TaskItem';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route path=\"/home\" component={Navbar} />\n          <Route path=\"/myTask\" component={TaskList} />\n          <Route path=\"/newTask\" component={TaskForm} />\n          <Route path=\"/updated/:id\" component={TaskForm} />\n        </Switch>\n        <ToastContainer />\n      </div>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["42","43"],"C:\\Users\\Lautaro Garello\\Desktop\\finalMCGA-tasks\\src\\reportWebVitals.ts",[],"C:\\Users\\Lautaro Garello\\Desktop\\finalMCGA-tasks\\src\\components\\screens\\Task\\TaskList.tsx",["44"],"C:\\Users\\Lautaro Garello\\Desktop\\finalMCGA-tasks\\src\\components\\screens\\Navbar\\Navbar.tsx",["45","46","47","48","49"],"C:\\Users\\Lautaro Garello\\Desktop\\finalMCGA-tasks\\src\\components\\screens\\Task\\TaskService.tsx",[],"C:\\Users\\Lautaro Garello\\Desktop\\finalMCGA-tasks\\src\\components\\screens\\Task\\TaskItem.tsx",["50"],"C:\\Users\\Lautaro Garello\\Desktop\\finalMCGA-tasks\\src\\components\\screens\\Task\\TaskForm.tsx",["51"],"import React, { ChangeEvent, FormEvent, useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport Task from './Task';\nimport * as TaskService from './TaskService';\nimport { useParams } from 'react-router';\nimport './Task.css';\n\nconst TaskForm = () => {\n\n    interface Params {\n        id: string;\n    }\n    const params = useParams<Params>();\n    console.log(params);\n    const initalState = { title: '', description: '', deadline: '' };\n    const [task, settask] = useState<Task>(initalState);\n\n    const hadleInputChange = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        settask({ ...task, [e.target.name]: e.target.value })\n    };\n\n    const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n        e.preventDefault(); //we cancelled the default behavior\n\n        if (!params.id) {\n            const res = await TaskService.createTask(task);\n            toast.success('New Task added');\n            console.log(res.data);\n            settask(initalState);\n        } else {\n            await TaskService.updatedTask(params.id, task);\n            toast.success('Task updated');\n        }\n    };\n\n    const getTask = async (id: string) => {\n        const res = await TaskService.getTask(id);\n        const { title, description, deadline } = res.data;\n        settask({ title, description, deadline });\n    }\n    useEffect(() => {\n        if (params.id) getTask(params.id);\n    }, [])\n    return (\n        <div>\n            <div className=\"wrapper\">\n                <div className='newTask'>\n                    <form className=\"formCUTask\" onSubmit={handleSubmit}>\n                        <div className=\"taskStructure\">\n                            <div className=\"deadline\">\n                                <label className=\"labelCUTask\">Please enter a deadline</label>\n                                <input className=\"inputCUTask\" type=\"date\" name=\"deadline\" onChange={hadleInputChange} value={task.deadline}></input>\n                            </div>\n                            <div className=\"tittle\">\n                                <label className=\"labelCUTask\">Write a title for this task</label>\n                                <input className=\"inputCUTask\" type=\"text\" name=\"title\" autoFocus onChange={hadleInputChange} value={task.title}></input>\n                            </div>\n                            <div className=\"description\">\n                                <label className=\"labelCUTask\">Please enter a description</label>\n                                <textarea className=\"textareaCUTask\" name=\"description\" onChange={hadleInputChange} value={task.description}></textarea>\n                            </div>\n                            <div className=\"btnTask\">\n                                {\n                                    params.id ?\n                                        <button className=\"btnCUTask\">Updated task</button>\n                                        :\n                                        <button className=\"btnCUTask\">Create task</button>\n                                }\n                            </div>\n                        </div>\n                    </form>\n                </div>\n                <div className=\"footer\">\n                    <a className=\"icon\" href=\"/home\">Home</a>\n                    <a className=\"icon\" href=\"/myTask\">My Task</a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TaskForm;\n","C:\\Users\\Lautaro Garello\\Desktop\\finalMCGA-tasks\\src\\components\\screens\\Login\\Loginform.tsx",["52","53","54","55","56","57","58","59"],"C:\\Users\\Lautaro Garello\\Desktop\\finalMCGA-tasks\\src\\components\\screens\\Login\\loginService.tsx",[],{"ruleId":"60","severity":1,"message":"61","line":12,"column":8,"nodeType":"62","messageId":"63","endLine":12,"endColumn":16},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"60","severity":1,"message":"68","line":2,"column":8,"nodeType":"62","messageId":"63","endLine":2,"endColumn":13},{"ruleId":"60","severity":1,"message":"69","line":1,"column":8,"nodeType":"62","messageId":"63","endLine":1,"endColumn":13},{"ruleId":"60","severity":1,"message":"70","line":2,"column":10,"nodeType":"62","messageId":"63","endLine":2,"endColumn":23},{"ruleId":"60","severity":1,"message":"71","line":2,"column":25,"nodeType":"62","messageId":"63","endLine":2,"endColumn":29},{"ruleId":"60","severity":1,"message":"72","line":2,"column":31,"nodeType":"62","messageId":"63","endLine":2,"endColumn":37},{"ruleId":"60","severity":1,"message":"73","line":7,"column":11,"nodeType":"62","messageId":"63","endLine":7,"endColumn":21},{"ruleId":"60","severity":1,"message":"69","line":1,"column":8,"nodeType":"62","messageId":"63","endLine":1,"endColumn":13},{"ruleId":"74","severity":1,"message":"75","line":43,"column":8,"nodeType":"76","endLine":43,"endColumn":10,"suggestions":"77"},{"ruleId":"60","severity":1,"message":"78","line":1,"column":8,"nodeType":"62","messageId":"63","endLine":1,"endColumn":17},{"ruleId":"60","severity":1,"message":"79","line":2,"column":51,"nodeType":"62","messageId":"63","endLine":2,"endColumn":60},{"ruleId":"60","severity":1,"message":"80","line":3,"column":10,"nodeType":"62","messageId":"63","endLine":3,"endColumn":19},{"ruleId":"60","severity":1,"message":"70","line":4,"column":10,"nodeType":"62","messageId":"63","endLine":4,"endColumn":23},{"ruleId":"60","severity":1,"message":"71","line":4,"column":25,"nodeType":"62","messageId":"63","endLine":4,"endColumn":29},{"ruleId":"60","severity":1,"message":"81","line":4,"column":31,"nodeType":"62","messageId":"63","endLine":4,"endColumn":36},{"ruleId":"82","severity":1,"message":"83","line":24,"column":66,"nodeType":"84","messageId":"85","endLine":24,"endColumn":68},{"ruleId":"82","severity":1,"message":"83","line":26,"column":28,"nodeType":"84","messageId":"85","endLine":26,"endColumn":30},"@typescript-eslint/no-unused-vars","'TaskItem' is defined but never used.","Identifier","unusedVar","no-native-reassign",["86"],"no-negated-in-lhs",["87"],"'axios' is defined but never used.","'react' is defined but never used.","'BrowserRouter' is defined but never used.","'Link' is defined but never used.","'Router' is defined but never used.","'stateLogin' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.","ArrayExpression",["88"],"'userEvent' is defined but never used.","'useEffect' is defined but never used.","'useParams' is defined but never used.","'Route' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},"Update the dependencies array to be: [params.id]",{"range":"91","text":"92"},[1436,1438],"[params.id]"]