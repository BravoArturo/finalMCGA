{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lautaro Garello\\\\Desktop\\\\finalMCGA-tasks\\\\src\\\\components\\\\screens\\\\Task\\\\TaskForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport * as TaskService from './TaskService';\nimport { useParams } from 'react-router';\nimport './Task.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskForm = () => {\n  _s();\n\n  const params = useParams();\n  console.log(params);\n  const initalState = {\n    title: '',\n    description: '',\n    deadline: ''\n  };\n  const [task, settask] = useState(initalState);\n\n  const hadleInputChange = e => {\n    settask({ ...task,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault(); //we cancelled the default behavior\n\n    if (!params.id) {\n      const res = await TaskService.createTask(task);\n      toast.success('New Task added');\n      console.log(res.data);\n      settask(initalState);\n    } else {\n      await TaskService.updatedTask(params.id, task);\n      toast.success('Task updated');\n    }\n  };\n\n  const getTask = async id => {\n    const res = await TaskService.getTask(id);\n    const {\n      title,\n      description,\n      deadline\n    } = res.data;\n    settask({\n      title,\n      description,\n      deadline\n    });\n  };\n\n  useEffect(() => {\n    if (params.id) getTask(params.id);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"New Task\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"newTask\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"formCUTask\",\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"taskStructure\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"deadline\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"labelCUTask\",\n                children: \"Please enter a deadline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"inputCUTask\",\n                type: \"date\",\n                name: \"deadline\",\n                onChange: hadleInputChange,\n                value: task.deadline\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tittle\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"labelCUTask\",\n                children: \"Write a title for this task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"inputCUTask\",\n                type: \"text\",\n                name: \"title\",\n                autoFocus: true,\n                onChange: hadleInputChange,\n                value: task.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"description\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"labelCUTask\",\n                children: \"Please enter a description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"textareaCUTask\",\n                name: \"description\",\n                onChange: hadleInputChange,\n                value: task.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btnTask\",\n              children: params.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btnCUTask\",\n                children: \"Updated task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 41\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btnCUTask\",\n                children: \"Create task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"icon\",\n          href: \"/\",\n          children: \"\\uE800\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TaskForm, \"xTzlKRFbbHDN7skoouQ+a+e7kNc=\", false, function () {\n  return [useParams];\n});\n\n_c = TaskForm;\nexport default TaskForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"sources":["C:/Users/Lautaro Garello/Desktop/finalMCGA-tasks/src/components/screens/Task/TaskForm.tsx"],"names":["React","useState","useEffect","toast","TaskService","useParams","TaskForm","params","console","log","initalState","title","description","deadline","task","settask","hadleInputChange","e","target","name","value","handleSubmit","preventDefault","id","res","createTask","success","data","updatedTask","getTask"],"mappings":";;;AAAA,OAAOA,KAAP,IAAwCC,QAAxC,EAAkDC,SAAlD,QAAmE,OAAnE;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAO,YAAP;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAKnB,QAAMC,MAAM,GAAGF,SAAS,EAAxB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,QAAMG,WAAW,GAAG;AAAEC,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,WAAW,EAAE,EAA1B;AAA8BC,IAAAA,QAAQ,EAAE;AAAxC,GAApB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAOS,WAAP,CAAhC;;AAEA,QAAMM,gBAAgB,GAAIC,CAAD,IAA4D;AACjFF,IAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAW,OAACG,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAArC,KAAD,CAAP;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAOJ,CAAP,IAAyC;AAC1DA,IAAAA,CAAC,CAACK,cAAF,GAD0D,CACtC;;AAEpB,QAAI,CAACf,MAAM,CAACgB,EAAZ,EAAgB;AACZ,YAAMC,GAAG,GAAG,MAAMpB,WAAW,CAACqB,UAAZ,CAAuBX,IAAvB,CAAlB;AACAX,MAAAA,KAAK,CAACuB,OAAN,CAAc,gBAAd;AACAlB,MAAAA,OAAO,CAACC,GAAR,CAAYe,GAAG,CAACG,IAAhB;AACAZ,MAAAA,OAAO,CAACL,WAAD,CAAP;AACH,KALD,MAKO;AACH,YAAMN,WAAW,CAACwB,WAAZ,CAAwBrB,MAAM,CAACgB,EAA/B,EAAmCT,IAAnC,CAAN;AACAX,MAAAA,KAAK,CAACuB,OAAN,CAAc,cAAd;AACH;AAEJ,GAbD;;AAeA,QAAMG,OAAO,GAAG,MAAON,EAAP,IAAsB;AAClC,UAAMC,GAAG,GAAG,MAAMpB,WAAW,CAACyB,OAAZ,CAAoBN,EAApB,CAAlB;AACA,UAAM;AAAEZ,MAAAA,KAAF;AAASC,MAAAA,WAAT;AAAsBC,MAAAA;AAAtB,QAAmCW,GAAG,CAACG,IAA7C;AACAZ,IAAAA,OAAO,CAAC;AAAEJ,MAAAA,KAAF;AAASC,MAAAA,WAAT;AAAsBC,MAAAA;AAAtB,KAAD,CAAP;AACH,GAJD;;AAKAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIK,MAAM,CAACgB,EAAX,EAAeM,OAAO,CAACtB,MAAM,CAACgB,EAAR,CAAP;AAClB,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACI;AAAA,wCAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACI;AAAM,UAAA,SAAS,EAAC,YAAhB;AAA6B,UAAA,QAAQ,EAAEF,YAAvC;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,UAAf;AAAA,sCACI;AAAO,gBAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAO,gBAAA,SAAS,EAAC,aAAjB;AAA+B,gBAAA,IAAI,EAAC,MAApC;AAA2C,gBAAA,IAAI,EAAC,UAAhD;AAA2D,gBAAA,QAAQ,EAAEL,gBAArE;AAAuF,gBAAA,KAAK,EAAEF,IAAI,CAACD;AAAnG;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAKI;AAAK,cAAA,SAAS,EAAC,QAAf;AAAA,sCACI;AAAO,gBAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAO,gBAAA,SAAS,EAAC,aAAjB;AAA+B,gBAAA,IAAI,EAAC,MAApC;AAA2C,gBAAA,IAAI,EAAC,OAAhD;AAAwD,gBAAA,SAAS,MAAjE;AAAkE,gBAAA,QAAQ,EAAEG,gBAA5E;AAA8F,gBAAA,KAAK,EAAEF,IAAI,CAACH;AAA1G;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eASI;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,sCACI;AAAO,gBAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAU,gBAAA,SAAS,EAAC,gBAApB;AAAqC,gBAAA,IAAI,EAAC,aAA1C;AAAwD,gBAAA,QAAQ,EAAEK,gBAAlE;AAAoF,gBAAA,KAAK,EAAEF,IAAI,CAACF;AAAhG;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBATJ,eAaI;AAAK,cAAA,SAAS,EAAC,SAAf;AAAA,wBAEQL,MAAM,CAACgB,EAAP,gBACI;AAAQ,gBAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,gBAGI;AAAQ,gBAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALZ;AAAA;AAAA;AAAA;AAAA,oBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eA2BI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC,MAAb;AAAoB,UAAA,IAAI,EAAC,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqCH,CA1ED;;GAAMjB,Q;UAKaD,S;;;KALbC,Q;AA4EN,eAAeA,QAAf","sourcesContent":["import React, { ChangeEvent, FormEvent, useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport Task from './Task';\nimport * as TaskService from './TaskService';\nimport { useParams } from 'react-router';\nimport './Task.css';\n\nconst TaskForm = () => {\n\n    interface Params {\n        id: string;\n    }\n    const params = useParams<Params>();\n    console.log(params);\n    const initalState = { title: '', description: '', deadline: '' };\n    const [task, settask] = useState<Task>(initalState);\n\n    const hadleInputChange = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        settask({ ...task, [e.target.name]: e.target.value })\n    };\n\n    const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n        e.preventDefault(); //we cancelled the default behavior\n\n        if (!params.id) {\n            const res = await TaskService.createTask(task);\n            toast.success('New Task added');\n            console.log(res.data);\n            settask(initalState);\n        } else {\n            await TaskService.updatedTask(params.id, task);\n            toast.success('Task updated');\n        }\n\n    };\n\n    const getTask = async (id: string) => {\n        const res = await TaskService.getTask(id);\n        const { title, description, deadline } = res.data;\n        settask({ title, description, deadline });\n    }\n    useEffect(() => {\n        if (params.id) getTask(params.id);\n    }, [])\n    return (\n        <div>\n            New Task\n            <div className=\"wrapper\">\n                <div className='newTask'>\n                    <form className=\"formCUTask\" onSubmit={handleSubmit}>\n                        <div className=\"taskStructure\">\n                            <div className=\"deadline\">\n                                <label className=\"labelCUTask\">Please enter a deadline</label>\n                                <input className=\"inputCUTask\" type=\"date\" name=\"deadline\" onChange={hadleInputChange} value={task.deadline}></input>\n                            </div>\n                            <div className=\"tittle\">\n                                <label className=\"labelCUTask\">Write a title for this task</label>\n                                <input className=\"inputCUTask\" type=\"text\" name=\"title\" autoFocus onChange={hadleInputChange} value={task.title}></input>\n                            </div>\n                            <div className=\"description\">\n                                <label className=\"labelCUTask\">Please enter a description</label>\n                                <textarea className=\"textareaCUTask\" name=\"description\" onChange={hadleInputChange} value={task.description}></textarea>\n                            </div>\n                            <div className=\"btnTask\">\n                                {\n                                    params.id ?\n                                        <button className=\"btnCUTask\">Updated task</button>\n                                        :\n                                        <button className=\"btnCUTask\">Create task</button>\n                                }\n                            </div>\n                        </div>\n                    </form>\n                </div>\n                <div className=\"footer\">\n                    <a className=\"icon\" href=\"/\">&#xe800;</a>\n                    <p>Home</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TaskForm;\n"]},"metadata":{},"sourceType":"module"}